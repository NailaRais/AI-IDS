{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naila\\\\AI-IDS\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport IntrusionDetection from '../abis/IntrusionDetection.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    const loadAlerts = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n      const networkId = await web3.eth.net.getId();\n      const contractAddress = IntrusionDetection.networks[networkId].address;\n      const contract = new web3.eth.Contract(IntrusionDetection.abi, contractAddress);\n      const response = await contract.methods.getAlerts().call();\n      setAlerts(response);\n    };\n    loadAlerts();\n  }, []);\n  const logAlert = async () => {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    const accounts = await web3.eth.getAccounts();\n    const contract = new web3.eth.Contract(IntrusionDetection.abi, contractAddress);\n    await contract.methods.logAlert(description).send({\n      from: accounts[0]\n    });\n    setDescription('');\n    // Reload alerts\n    loadAlerts();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Intrusion Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Alert Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logAlert,\n      children: \"Log Alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [alert.description, \" at \", new Date(alert.timestamp * 1000).toString()]\n      }, alert.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"tx7kZVkXQNb7DNVZtDwVu5m6JTw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Web3","IntrusionDetection","jsxDEV","_jsxDEV","Dashboard","_s","alerts","setAlerts","description","setDescription","loadAlerts","web3","givenProvider","networkId","eth","net","getId","contractAddress","networks","address","contract","Contract","abi","response","methods","getAlerts","call","logAlert","accounts","getAccounts","send","from","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","alert","Date","timestamp","toString","id","_c","$RefreshReg$"],"sources":["C:/Users/naila/AI-IDS/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport IntrusionDetection from '../abis/IntrusionDetection.json';\r\n\r\nconst Dashboard = () => {\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [description, setDescription] = useState('');\r\n\r\n    useEffect(() => {\r\n        const loadAlerts = async () => {\r\n            const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\r\n            const networkId = await web3.eth.net.getId();\r\n            const contractAddress = IntrusionDetection.networks[networkId].address;\r\n            const contract = new web3.eth.Contract(IntrusionDetection.abi, contractAddress);\r\n\r\n            const response = await contract.methods.getAlerts().call();\r\n            setAlerts(response);\r\n        };\r\n\r\n        loadAlerts();\r\n    }, []);\r\n\r\n    const logAlert = async () => {\r\n        const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\r\n        const accounts = await web3.eth.getAccounts();\r\n        const contract = new web3.eth.Contract(IntrusionDetection.abi, contractAddress);\r\n\r\n        await contract.methods.logAlert(description).send({ from: accounts[0] });\r\n        setDescription('');\r\n        // Reload alerts\r\n        loadAlerts();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Intrusion Alerts</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Alert Description\"\r\n            />\r\n            <button onClick={logAlert}>Log Alert</button>\r\n            <ul>\r\n                {alerts.map(alert => (\r\n                    <li key={alert.id}>{alert.description} at {new Date(alert.timestamp * 1000).toString()}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}